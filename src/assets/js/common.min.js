hljs.highlightAll();

        // 모달 창
        const modalBtn = document.querySelector(".modal__btn");     // 소스 보기 버튼
        const modalCont = document.querySelector(".modal__cont");   // 모달 창
        const modalClose = document.querySelector(".modal__close"); // 모달 창 닫기 버튼

        modalBtn.addEventListener("click", () => {
            modalCont.classList.add("show");    // 소스보기 버튼 누르면 모달 창 띄우기
            modalCont.classList.remove("hide");
        });

        modalClose.addEventListener("click", () => {
            modalCont.classList.add("hide");     // X 버튼 누르면 모달 창 닫기
        });

        // 탭 메뉴
        const tabBtn = document.querySelectorAll(".modal__box .tabs > div");
        const tabCont = document.querySelectorAll(".modal__box .cont > div");

        tabBtn.forEach((element, index) => {
            // 버튼을 클릭함
            element.addEventListener("click", (event) => {
                event.preventDefault();   // 클릭한 버튼을 누름으로 발생하는 이벤트 무효화
                // 버튼 클릭해도(href="#" 때문에 발생하는)끌올 막을 수 있음.
                
                // 클래스 active를 모두 제거
                tabBtn.forEach(li => {
                    li.classList.remove("active");      // li(버튼)을 누르면 먼저 active(버튼눌린)효과 지워준다.
                });

                // 내가 클릭한 버튼에 active 효과 추가
                element.classList.add("active");        // 그런 다음 내가 누른 버튼에만 active 효과를 넣어주도록 한다.

                // 버튼을 클릭하면 모든 자식 박스(콘텐츠) 숨기기
                tabCont.forEach(div => {
                    div.style.display = "none";
                });

                // [i]클릭한 버튼과 [i]그에 알맞는 자식 박스(콘텐츠)를 출력시킴
                tabCont[index].style.display = "block";
            });
        });